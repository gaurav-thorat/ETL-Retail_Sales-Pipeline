USE WAREHOUSE RETAIL_WH;
USE SCHEMA RETAIL_PROJECT.CORE;

-- CUSTOMER DIMENSION
CREATE OR REPLACE TABLE DIM_CUSTOMER (
    CUSTOMER_ID VARCHAR(8) PRIMARY KEY,
    CUSTOMER_NAME VARCHAR(22),
    SEGMENT VARCHAR(11),
    CUSTOMER_TYPE VARCHAR(3),  -- B2B OR B2C, NEW COLUMN
    REPEAT_CUSTOMER_FLAG NUMBER(1,0)  -- NEW COLUMN
);

-- PRODUCT DIMENSION
CREATE OR REPLACE TABLE DIM_PRODUCT (
    PRODUCT_ID VARCHAR(15) PRIMARY KEY,
    CATEGORY VARCHAR(15),
    SUB_CATEGORY VARCHAR(11),
    PRODUCT_NAME VARCHAR(127)
);

-- LOCATION DIMENSION
CREATE OR REPLACE TABLE DIM_LOCATION (
    LOCATION_ID INT AUTOINCREMENT PRIMARY KEY,
    CITY VARCHAR(16),
    STATE VARCHAR(20),
    REGION VARCHAR(7),
    COUNTRY VARCHAR(13),
    POSTAL_CODE VARCHAR(5),
    LATITUDE FLOAT,
    LONGITUDE FLOAT
);

-- DATE DIMENSION
CREATE OR REPLACE TABLE DIM_DATE (
    DATE_ID INT PRIMARY KEY,
    DATE_ACTUAL DATE,
    YEAR INT,
    MONTH INT,
    DAY INT,
    DAY_NAME VARCHAR(10),
    MONTH_NAME VARCHAR(10),
    WEEK_OF_YEAR INT
);

-- FACT SALES TABLE
CREATE OR REPLACE TABLE FACT_SALES (
    ROW_ID INT PRIMARY KEY,
    ORDER_ID VARCHAR(14),
    ORDER_DATE DATE,
    ORDER_DATE_ID INT,
    ORDER_MONTH VARCHAR(7),  -- YYYY-MM
    SHIP_DATE DATE,
    CUSTOMER_ID VARCHAR(8),
    PRODUCT_ID VARCHAR(15),
    LOCATION_ID INT,
    SALES NUMBER(9,2)
);

-- CLEAN UP BASE TABLE
CREATE OR REPLACE TEMP TABLE BASED_CLEANED AS
SELECT 
    ROW_ID,
    ORDER_ID,
    ORDER_DATE,
    TRIM(TO_CHAR(ORDER_DATE, 'MON')) AS ORDER_MONTH,
    SHIP_DATE,
    CUSTOMER_ID,
    TRIM(CUSTOMER_NAME) AS CUSTOMER_NAME,
    SEGMENT,
    COUNTRY,
    TRIM(CITY) AS CITY,
    TRIM(STATE) AS STATE,
    TRIM(REGION) AS REGION,
    LPAD(TRIM(POSTAL_CODE), 5, '0') AS POSTAL_CODE,
    PRODUCT_ID, 
    CATEGORY,
    SUB_CATEGORY,
    PRODUCT_NAME,
    SALES
FROM RETAIL_PROJECT.STAGING.STG_SUPERSTORE_SALES
WHERE ORDER_ID IS NOT NULL;

-- CREATE REPEAT CUSTOMER TABLE
CREATE OR REPLACE TEMP TABLE REPEAT_CUSTOMERS AS
SELECT 
    CUSTOMER_ID, 
    CASE WHEN COUNT(DISTINCT ORDER_ID) > 1 THEN 1 ELSE 0 END AS REPEAT_CUSTOMER_FLAG
FROM BASED_CLEANED
GROUP BY CUSTOMER_ID;

-- CREATE DIM_CUSTOMER_FINAL
CREATE OR REPLACE TEMP TABLE DIM_CUSTOMER_FINAL AS
SELECT DISTINCT
    BC.CUSTOMER_ID,
    BC.CUSTOMER_NAME,
    BC.SEGMENT,
    CASE
        WHEN BC.SEGMENT = 'Corporate' THEN 'B2B'
        ELSE 'B2C'
    END AS CUSTOMER_TYPE,
    RC.REPEAT_CUSTOMER_FLAG
FROM BASED_CLEANED BC
LEFT JOIN REPEAT_CUSTOMERS RC
    ON BC.CUSTOMER_ID = RC.CUSTOMER_ID;

-- CREATE DIM_PRODUCT_FINAL
CREATE OR REPLACE TEMP TABLE DIM_PRODUCT_FINAL AS
SELECT DISTINCT 
    PRODUCT_ID,
    CATEGORY,
    SUB_CATEGORY,
    PRODUCT_NAME
FROM BASED_CLEANED;

-- CREATE DIM_LOCATION_FINAL
CREATE OR REPLACE TEMP TABLE DIM_LOCATION_BASE AS
SELECT DISTINCT 
    CITY,
    STATE,
    REGION,
    POSTAL_CODE,
    COUNTRY
FROM BASED_CLEANED;

CREATE OR REPLACE TEMP TABLE US_ZIPCODE AS
SELECT 
    ZIP AS POSTAL_CODE,
    LATITUDE,
    LONGITUDE
FROM U_S__ZIP_CODE_METADATA.ZIP_DEMOGRAPHICS.ZIP_CODE_METADATA;

CREATE OR REPLACE TEMP TABLE DIM_LOCATION_FINAL AS
SELECT 
    DLB.CITY,
    DLB.STATE,
    DLB.REGION,
    DLB.POSTAL_CODE,
    DLB.COUNTRY,
    UZ.LATITUDE,
    UZ.LONGITUDE
FROM DIM_LOCATION_BASE DLB
LEFT JOIN US_ZIPCODE UZ
    ON DLB.POSTAL_CODE = UZ.POSTAL_CODE;

-- CREATE DIM_DATE_FINAL
CREATE OR REPLACE TEMP TABLE DIM_DATE_FINAL AS
SELECT DISTINCT 
    TO_NUMBER(TO_CHAR(ORDER_DATE, 'YYYYMMDD')) AS DATE_ID,
    ORDER_DATE AS DATE_ACTUAL,
    EXTRACT(YEAR FROM ORDER_DATE) AS YEAR,
    EXTRACT(MONTH FROM ORDER_DATE) AS MONTH,
    EXTRACT(DAY FROM ORDER_DATE) AS DAY,
    TRIM(TO_CHAR(ORDER_DATE, 'DY')) AS DAY_NAME,
    TRIM(TO_CHAR(ORDER_DATE, 'MON')) AS MONTH_NAME,
    WEEKOFYEAR(ORDER_DATE) AS WEEK_OF_YEAR
FROM BASED_CLEANED;

-- INSERT INTO DIM_CUSTOMER
INSERT INTO DIM_CUSTOMER
SELECT * FROM DIM_CUSTOMER_FINAL;

-- INSERT INTO DIM_PRODUCT
INSERT INTO DIM_PRODUCT
SELECT * FROM DIM_PRODUCT_FINAL;

-- INSERT INTO DIM_LOCATION
INSERT INTO DIM_LOCATION (CITY, STATE, REGION, COUNTRY, POSTAL_CODE, LATITUDE, LONGITUDE)
SELECT CITY, STATE, REGION, COUNTRY, POSTAL_CODE, LATITUDE, LONGITUDE
FROM DIM_LOCATION_FINAL;

-- INSERT INTO DIM_DATE
INSERT INTO DIM_DATE
SELECT * FROM DIM_DATE_FINAL;

-- INSERT INTO FACT_WITH_LOCATION
INSERT INTO FACT_SALES
    (ROW_ID, ORDER_ID, ORDER_DATE, ORDER_MONTH, ORDER_DATE_ID, SHIP_DATE, CUSTOMER_ID, PRODUCT_ID, LOCATION_ID, SALES)
SELECT
    F.ROW_ID,
    F.ORDER_ID,
    F.ORDER_DATE,
    F.ORDER_MONTH,
    DDATE.DATE_ID AS ORDER_DATE_ID,
    F.SHIP_DATE,
    F.CUSTOMER_ID,
    F.PRODUCT_ID,
    DLOC.LOCATION_ID,
    F.SALES,
FROM BASED_CLEANED F
LEFT JOIN DIM_LOCATION DLOC
    ON F.POSTAL_CODE = DLOC.POSTAL_CODE
LEFT JOIN DIM_DATE DDATE
    ON F.ORDER_DATE = DDATE.DATE_ACTUAL;

-- CLEAN UP
DROP TABLE IF EXISTS BASED_CLEANED;
DROP TABLE IF EXISTS REPEAT_CUSTOMERS;
DROP TABLE IF EXISTS DIM_CUSTOMER_FINAL;
DROP TABLE IF EXISTS DIM_PRODUCT_FINAL;
DROP TABLE IF EXISTS DIM_LOCATION_BASE;
DROP TABLE IF EXISTS US_ZIPCODE;
DROP TABLE IF EXISTS DIM_LOCATION_FINAL;
DROP TABLE IF EXISTS DIM_DATE_FINAL;

